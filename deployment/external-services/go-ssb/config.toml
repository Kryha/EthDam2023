# SPDX-FileCopyrightText: 2023 The Go-SSB Authors
# SPDX-License-Identifier: MIT

[go-sbot]
# Where to put the log and indexes
repo = '.ssb-go'
# Where to write debug output: NOTE, this is relative to "repo" atm
debugdir = ''

# Secret-handshake app-key (or compatible alt-key)
shscap = "1KHLiKZvAvjbY1ziZEHMXawbCEIM6qwjCDm3VYRan/s="
# If set, sign with hmac hash of msg instead of plain message object using this key
hmac = ""
# How many hops to fetch (1: friends, 2: friends of friends); note that a nodejs hops value needs to be decreased by one in go-sbot
# e.g. go-sbot hops of 1 <=> ssb-js hops of 2
hops = 1

# how many feeds can be replicated with one peer connection using legacy gossip (shouldn't be higher than numRepl)
numPeer = 5
# how many feeds can be replicated concurrently using legacy gossip
numRepl = 10

# Enable sending local UDP broadcasts
localadv = true
# Enable connecting to incoming UDP broadcasts
localdiscov = true
# Enable syncing by using epidemic-broadcast-trees (EBT)
enable-ebt = false
# Bypass graph auth and fetch remote's feed, useful for pubs that are restoring their data from peers. Caveats abound, however.
promisc = false
# Disable the UNIX socket RPC interface
nounixsock = false



[sbotcli]
# SHS Key (default: 1KHLiKZvAvjbY1ziZEHMXawbCEIM6qwjCDm3VYRan/s=)
shscap = "1KHLiKZvAvjbY1ziZEHMXawbCEIM6qwjCDm3VYRan/s="

# The remote pubkey you are connecting to (by default the local key)
remotekey = ""

# Secret key file (default: ~/.ssb-go/secret)
key = "/root/.ssb-go/secret"

# If set, Unix socket is used instead of TCP (default: ~/.ssb-go/socket)
unixsock = "/root/.ssb-go/socket"

# Pass a duration (like 3s or 5m) after which it times out (empty string to disable) (default: 45s)
timeout = "45s"
