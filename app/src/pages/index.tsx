import { Delete } from "@mui/icons-material";
import { Box, Button, Chip, IconButton, Slider, Stack, Tab, Tabs, TextField, Tooltip, Typography } from "@mui/material";
import Head from "next/head";
import { useState } from "react";
import { Comic_Neue } from "next/font/google";
const font = Comic_Neue({ weight: ["300", "400", "700"], style: ["italic", "normal"], subsets: ["latin"] });

export default function Home() {
	return (
		<>
			<Head>
				<title>Create Next App</title>
				<meta name="description" content="Generated by create next app" />
				<meta name="viewport" content="width=device-width, initial-scale=1" />
				<link rel="icon" href="/favicon.ico" />
			</Head>
			<Stack component="main">
				<Stack sx={{ border: 1, height: 80 }}>
					<TextField id="outlined-basic" label="Outlined" variant="outlined" />
				</Stack>
				<Stack component="section" role="livestream" direction="row" sx={{ border: 1, flexGrow: 1 }}>
					<Stack component="section" role="screen" sx={{ border: 1, flexGrow: 1 }}></Stack>
					<Stack component="section" role="chat" sx={{ border: 1, width: 450 }}>
						<Button variant="contained" sx={{ fontFamily: font.style.fontFamily }}>
							contained
						</Button>
						<Button variant="outlined">outlined</Button>
						<Button variant="text">text</Button>
						<TextField id="outlined-basic" label="Outlined" variant="outlined" />
						<TextField id="filled-basic" label="Filled" variant="filled" />
						<TextField id="standard-basic" label="Standard" variant="standard" />
						<Chip label="Chip Filled" />
						<Chip label="Chip Outlined" variant="outlined" />
						<Slider />
						<Tooltip title="Delete">
							<IconButton>
								<Delete />
							</IconButton>
						</Tooltip>
						<BasicTabs />
					</Stack>
				</Stack>
			</Stack>
		</>
	);
}

interface TabPanelProps {
	children?: React.ReactNode;
	index: number;
	value: number;
}

function TabPanel(props: TabPanelProps) {
	const { children, value, index, ...other } = props;

	return (
		<div role="tabpanel" hidden={value !== index} id={`simple-tabpanel-${index}`} aria-labelledby={`simple-tab-${index}`} {...other}>
			{value === index && (
				<Box sx={{ p: 3 }}>
					<Typography>{children}</Typography>
				</Box>
			)}
		</div>
	);
}

function a11yProps(index: number) {
	return {
		id: `simple-tab-${index}`,
		"aria-controls": `simple-tabpanel-${index}`,
	};
}

export function BasicTabs() {
	const [value, setValue] = useState(0);

	const handleChange = (event: React.SyntheticEvent, newValue: number) => {
		setValue(newValue);
	};

	return (
		<Box sx={{ width: "100%" }}>
			<Box sx={{ borderBottom: 1, borderColor: "divider" }}>
				<Tabs value={value} onChange={handleChange} aria-label="basic tabs example">
					<Tab label="Item One" {...a11yProps(0)} />
					<Tab label="Item Two" {...a11yProps(1)} />
					<Tab label="Item Three" {...a11yProps(2)} />
				</Tabs>
			</Box>
			<TabPanel value={value} index={0}>
				Item One
			</TabPanel>
			<TabPanel value={value} index={1}>
				Item Two
			</TabPanel>
			<TabPanel value={value} index={2}>
				Item Three
			</TabPanel>
		</Box>
	);
}
